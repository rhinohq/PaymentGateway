@page "/checkout"
@using Microsoft.AspNetCore.Authorization

@using PaymentGateway.Data.ViewModels

@inject HttpClient Http
@inject NavigationManager NavManager
@attribute [Authorize]

<h3>Checkout</h3>

@if (UserBasket != null)
{
    <EditForm Model="@CheckoutForm" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row">
            <div class="col-75">
                <div class="container">
                    <div class="row">
                        <div class="col-50">
                            <h4>Billing Address</h4>
                            <label for="fname"><i class="fa fa-user"></i> Full Name</label>
                            <InputText @bind-Value="CheckoutForm.FullName" disabled="@disallowEditWord" id="fname" name="firstname" placeholder="John M. Doe"></InputText>
                            <ValidationMessage For="() => CheckoutForm.FullName" />

                            <label for="email"><i class="fa fa-envelope"></i> Email</label>
                            <InputText @bind-Value="CheckoutForm.Email" disabled="@disallowEditWord" id="email" name="email" placeholder="john@example.com"></InputText>
                            <ValidationMessage For="() => CheckoutForm.Email" />

                            <label for="adr"><i class="fa fa-address-card-o"></i> Address</label>
                            <InputText @bind-Value="CheckoutForm.Address" disabled="@disallowEditWord" id="adr" name="address" placeholder="542 W. 15th Street"></InputText>
                            <ValidationMessage For="() => CheckoutForm.Address" />

                            <label for="city"><i class="fa fa-institution"></i> City</label>
                            <InputText @bind-Value="CheckoutForm.City" disabled="@disallowEditWord" id="city" name="city" placeholder="New York"></InputText>
                            <ValidationMessage For="() => CheckoutForm.City" />

                            <div class="row">
                                <div class="col-50">
                                    <label for="state">State</label>
                                    <InputText @bind-Value="CheckoutForm.State" disabled="@disallowEditWord" id="state" name="state" placeholder="NY"></InputText>
                                    <ValidationMessage For="() => CheckoutForm.State" />
                                </div>
                                <div class="col-50">
                                    <label for="zip">Zip</label>
                                    <InputText @bind-Value="CheckoutForm.Zip" disabled="@disallowEditWord" id="zip" name="zip" placeholder="10001"></InputText>
                                    <ValidationMessage For="() => CheckoutForm.Zip" />
                                </div>
                            </div>
                        </div>

                        <div class="col-50">
                            <h4>Payment</h4>
                            <label for="fname">Accepted Cards</label>
                            <div class="icon-container">
                                <i class="fa fa-cc-visa" style="color:navy;"></i>
                                <i class="fa fa-cc-amex" style="color:blue;"></i>
                                <i class="fa fa-cc-mastercard" style="color:red;"></i>
                                <i class="fa fa-cc-discover" style="color:orange;"></i>
                            </div>
                            <label for="cname">Name on Card</label>
                            <InputText @bind-Value="CheckoutForm.NameOnCard" disabled="@disallowEditWord" id="cname" name="cardname" placeholder="John More Doe"></InputText>
                            <ValidationMessage For="() => CheckoutForm.NameOnCard" />

                            <label for="ccnum">Credit card number</label>
                            <InputText @bind-Value="CheckoutForm.CardNumber" disabled="@disallowEditWord" id="ccnum" name="cardnumber" placeholder="1111-2222-3333-4444"></InputText>
                            <ValidationMessage For="() => CheckoutForm.CardNumber" />

                            <label for="expmonth">Exp Month</label>
                            <InputNumber @bind-Value="CheckoutForm.ExpiryMonth" disabled="@disallowEditWord" id="expmonth" name="expmonth" placeholder="September"></InputNumber>
                            <ValidationMessage For="() => CheckoutForm.ExpiryMonth" />

                            <div class="row">
                                <div class="col-50">
                                    <label for="expyear">Exp Year</label>
                                    <InputNumber @bind-Value="CheckoutForm.ExpiryYear" disabled="@disallowEditWord" id="expyear" name="expyear" placeholder="2018"></InputNumber>
                                    <ValidationMessage For="() => CheckoutForm.ExpiryYear" />
                                </div>
                                <div class="col-50">
                                    <label for="cvv">CVV</label>
                                    <InputNumber @bind-Value="CheckoutForm.Cvv" disabled="@disallowEditWord" id="cvv" name="cvv" placeholder="352"></InputNumber>
                                    <ValidationMessage For="() => CheckoutForm.Cvv" />
                                </div>
                            </div>
                        </div>

                    </div>
                    <input type="submit" value="Continue" class="btn">
                </div>
            </div>
            <div class="col-25">
                <div class="container">
                    <h4>Cart <span class="price" style="color:black"><i class="fa fa-shopping-cart"></i> <b>@UserBasket.Size</b></span></h4>

                    <br />

                    @foreach (var item in UserBasket.Items)
                    {
                        <p>
                            <a href="@string.Format("product/{0}", item.Product.ProductId)">@item.Product.Name</a>
                            <span class="price">£@item.TotalCost</span>
                        </p>
                    }

                    <hr>
                    <p>Total <span class="price" style="color:black"><b>@TotalCost</b></span></p>
                </div>
            </div>
        </div>
    </EditForm>
}
else
{
    <p>Loading your basket...</p>
}

@code {
    private BasketDetail UserBasket { get; set; }
    private CheckoutForm CheckoutForm { get; set; }

    private bool disallowEditWord = false;

    private string TotalCost => UserBasket != null
        ? $"£{UserBasket.TotalCost}"
        : "£0.00";

    protected override async Task OnInitializedAsync()
    {
        UserBasket = await Http.GetFromJsonAsync<BasketDetail>("Basket");
        CheckoutForm = new CheckoutForm(UserBasket.BasketId);
    }

    private async void HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync<CheckoutForm>("Checkout/CheckoutOrder", CheckoutForm);

        Console.WriteLine(response);

        NavManager.NavigateTo("/store");
    }
}
